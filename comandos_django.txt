CLI > Interfaz de Linea de comandos (Command Line Interface)
Todos los comandos de django se realizan mediante el comando 'django-admin'

django-admin startproject NOMBRE_PROYECTO > creara un nuevo proyecto con los archivos necesarios para django

wsgi.py > servidor wsgi no se toca
asgi.py > servidro asgi no se toca
manage.py = app.py > ejecuta tareas
setting.py > configuraciones
urls.py > sirve para las rutas

python manage.py > no hara nada mostrara informacion

settings.py
'default': {
  'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
  'NAME': 'agenda', #nombre de la bd
  'USER': 'root', #usuario del servidor
  'PASSWORD': 'Aa123', #contraseña del servidor
  'PORT': '3306', #puerto del servidor
  'HOST': 'localhost', #direccion del servidor
}

python manage.py runserver > levantar el proyecto en Django

python manage.py showmigrations > muestra las migraciones creadas y que están o no ejecutadas

python manage.py migrate NOMBRE_APP NUMERO_MIGRACION > efectuar dicha migracion o se puede revertir hasta la migracion seleccionada (todas las migraciones efectuadas queden sin efecto) si queremos revetir absolutamente todas las migraciones podemos colocar en NUMERO_MIGRACION zero, LA TABLA DJANGO_MIGRATIONS NUNCA SE TOCA 

python manage.py startapp > creara la aplicación del proyecto, en este caso seria como vistas
---------------------------
Aplicacion
admin.py
apps.py
models.py todos los modelos relacionado con la aplicacion
views.py vistas relacionado con la aplicacion
---------------------------

py .\manage.py makemigrations <aplicacion> --name <nombre_archivo> > crea la migracion (poner el nombre de la aplicacion y nombre de la migracion) con todos los cambios que se habran hecho en el ORM

py .\manage.py sqlmigrate gestion 0001 > mostrará el sql de la migración creada

py .\manage.py dbshell > Abre la terminal con el mysql

python manage.py createsuperuser > crea un superusuario para que pueda utilizado en el panel administrativo

validaciones y login: https://django-rest-framework-simplejwt.readthedocs.io/en/latest/